summary(glht(glm.fit[[1]], linfct = C))
summary(glm.fit[[1]])
contrast(glm.fit[[1]], list(age ="2m", group = "APP"), list(age ="2m", group = "WT"))
contrast(glm.fit[[1]], list(age ="4m", group = "APP"), list(age ="4m", group = "WT"))
contrast(glm.fit[[1]], list(age ="5m", group = "APP"), list(age ="5m", group = "WT"))
contrast(glm.fit[[1]], list(age ="6m", group = "APP"), list(age ="6m", group = "WT"))
contrast(glm.fit[[1]], list(age ="4m", group = "WT"), list(age ="2m", group = "WT"))
contrast(glm.fit[[1]], list(age ="5m", group = "WT"), list(age ="4m", group = "WT"))
contrast(glm.fit[[1]], list(age ="5m", group = "APP"), list(age ="4m", group = "APP"))
summary(glm.fit[[1]])
contrast(glm.fit[[1]], list(age ="4m", group = "APP"), list(age ="2m", group = "APP"))
-0.01820 + 0.02261
contrast(glm.fit[[1]], list(age ="2m", group = "APP"), list(age ="2m", group = "WT"))
C <- matrix(c(0,0,0,0,1,0,0,0), 1)
C <- matrix(c(0,0,0,0,1,0,0,0), 1); summary(glht(glm.fit[[1]], linfct = C))
contrast(glm.fit[[1]], list(age ="4m", group = "APP"), list(age ="4m", group = "WT"))
C <- matrix(c(0,0,0,0,1,1,0,0), 1); summary(glht(glm.fit[[1]], linfct = C))
contrast(glm.fit[[1]], list(age ="5m", group = "APP"), list(age ="5m", group = "WT"))
C <- matrix(c(0,0,0,0,1,0,1,0), 1); summary(glht(glm.fit[[1]], linfct = C))
C <- matrix(c(0,0,0,0,1,0,0,6), 1); summary(glht(glm.fit[[1]], linfct = C))
contrast(glm.fit[[1]], list(age ="6m", group = "APP"), list(age ="6m", group = "WT"))
C <- matrix(c(0,0,0,0,1,0,0,1), 1); summary(glht(glm.fit[[1]], linfct = C))
summary(glm.fit[[1]])
C <- matrix(c(0,1,0,0,0,0,0,0), 1); summary(glht(glm.fit[[1]], linfct = C))
contrast(glm.fit[[1]], list(age ="4m", group = "WT"), list(age ="2m", group = "WT"))
C <- matrix(c(0,-1,1,0,0,0,0,0), 1); summary(glht(glm.fit[[1]], linfct = C))
contrast(glm.fit[[1]], list(age ="5m", group = "WT"), list(age ="4m", group = "WT"))
C <- matrix(c(0,0,0,0,0,-1,1,0), 1); summary(glht(glm.fit[[1]], linfct = C))
contrast(glm.fit[[1]], list(age ="5m", group = "APP"), list(age ="4m", group = "APP"))  # glht only
C <- matrix(c(0,0,0,0,-1,1,0,0), 1); summary(glht(glm.fit[[1]], linfct = C))
summary(glm.fit[[1]])
0.13245 -0.16494 + 0.01820 -0.02261
contrast(glm.fit[[1]], list(age ="5m", group = "APP"), list(age ="4m", group = "APP"))
C <- matrix(c(0,0,0,0,0,-1,1,0)); summary(glht(glm.fit[[1]], linfct = C))  # glht only
C <- matrix(c(0,0,0,0,0,-1,1,0), 1); summary(glht(glm.fit[[1]], linfct = C))  # glht only
lapply(glm.fit, function(x) contrast(x, list(age = "2m", group = "APP"), list (age ="2m", group = "WT")))
y= contrast(glm.fit[[1]], list(age ="4m", group = "APP"), list(age ="4m", group = "WT"))
summary(y)
y
str(y)
y$coef
y$Contrast
y$Pvalue
y
y["Pvalue"]
y[["Pvalue"]]
y[[c("Contrast", "Pvalue"]]
y[[c("Contrast", "Pvalue")]]
c(y[["Contrast"]], y[["Pvalue"]])
do.call(cbind, y[["Contrast"]], y[["Pvalue"]])
summary(y)
str(y)
y$aCoef
y$bCoef
y$Upper
C <- matrix(c(0,0,0,0,1,0,0,1), 1); summary(glht(glm.fit[[1]], linfct = C))
c(y$Pvalue, y$Constrast)
c(y$Constrast)
c(y$Pvalue, y$Constract)
c(y$Pvalue, y$Contrast)
c(Pvalue = y$Pvalue, Constrast = y$Contrast)
c(Pvalue = y$Pvalue, Constras = y$Contrast)
cbind(Pvalue = y$Pvalue, Constrast = y$Contrast)
z= sapply(glm.fit, function(x) {y <- contrast(x, list(age = "2m", group = "APP"), list (age ="2m", group = "WT"))
cbind(Constrast = y$Contrast, Pvalue = y$Pvalue)})
str(z)
z[, 1:5]
c(y$Pvalue, y$Contrast)
?sapply
z = sapply(glm.fit[1:10], function(x) {
y <- contrast(x, list(age = "2m", group = "APP"), list (age ="2m", group = "WT")); c(y$Contrast, y$Pvalue)})
z
z = sapply(glm.fit[1:10], function(x) {
y <- contrast(x, list(age = "2m", group = "APP"), list (age ="2m", group = "WT")); c(y$Contrast, y$Pvalue)}, simplyfy = T)
z = sapply(glm.fit[1:10], function(x) {
y <- contrast(x, list(age = "2m", group = "APP"), list (age ="2m", group = "WT")); c(y$Contrast, y$Pvalue)}, simplify = TRUE)
z
z = lapply(glm.fit[1:10], function(x) {
y <- contrast(x, list(age = "2m", group = "APP"), list (age ="2m", group = "WT")); c(y$Contrast, y$Pvalue)})
z
z = do.call(rbind, lapply(glm.fit[1:10], function(x) {
y <- contrast(x, list(age = "2m", group = "APP"), list (age ="2m", group = "WT")); c(y$Contrast, y$Pvalue)}))
z
names(z) <- c("contrast", "pval")
z
z = do.call(rbind, lapply(glm.fit[1:10], function(x) {
y <- contrast(x, list(age = "2m", group = "APP"), list (age ="2m", group = "WT")); c(y$Contrast, y$Pvalue)}))
colnames(z) <- c("contrast", "pval")
z
age-spe <- lapply(c("2m", "4m", "5m", "6m") function(x1) {
y1 <- sapply(glm.fit[1:10], function(x2) {
y2 <- contrast(x2, list(age = x1, group = "APP"), list (age = x1, group = "WT")); c(y$Contrast, y$Pvalue)})
rownames(y1) <- c("contrast", "pval"); t(y1)
})
age-spe <- lapply(c("2m", "4m", "5m", "6m"), function(x1) {
y1 <- sapply(glm.fit[1:10], function(x2) {
y2 <- contrast(x2, list(age = x1, group = "APP"), list (age = x1, group = "WT")); c(y$Contrast, y$Pvalue)})
rownames(y1) <- c("contrast", "pval"); t(y1)
})
age-spe <- lapply(c("2m", "4m", "5m", "6m"), function(x1) {
y1 = sapply(glm.fit[1:10], function(x2) {
y2 = contrast(x2, list(age = x1, group = "APP"), list (age = x1, group = "WT")); c(y2$Contrast, y2$Pvalue)})
rownames(y1) <- c("contrast", "pval"); t(y1)
})
age-spe <- lapply(c("2m", "4m", "5m", "6m"), function(x1) {
y1 = sapply(glm.fit[1:10], function(x2) {
y2 = contrast(x2, list(age = x1, group = "APP"), list (age = x1, group = "WT")); c(y2$Contrast, y2$Pvalue)})
rownames(y1) = c("contrast", "pval"); t(y1)
})
x1 = "2m"
y1 = sapply(glm.fit[1:10], function(x2) {
y2 = contrast(x2, list(age = x1, group = "APP"), list (age = x1, group = "WT")); c(y2$Contrast, y2$Pvalue)})
rownames(y1) = c("contrast", "pval"); t(y1)
age-spe <- lapply(c("2m", "4m", "5m", "6m"), function(x1) {
cat(x1)
#   y1 = sapply(glm.fit[1:10], function(x2) {
#     y2 = contrast(x2, list(age = x1, group = "APP"), list (age = x1, group = "WT")); c(y2$Contrast, y2$Pvalue)})
#   rownames(y1) = c("contrast", "pval"); t(y1)
})
age_spe <- lapply(c("2m", "4m", "5m", "6m"), function(x1) {
cat(x1)
#   y1 = sapply(glm.fit[1:10], function(x2) {
#     y2 = contrast(x2, list(age = x1, group = "APP"), list (age = x1, group = "WT")); c(y2$Contrast, y2$Pvalue)})
#   rownames(y1) = c("contrast", "pval"); t(y1)
})
age_spe <- lapply(c("2m", "4m", "5m", "6m"), function(x1) {
y1 = sapply(glm.fit[1:10], function(x2) {
y2 = contrast(x2, list(age = x1, group = "APP"), list (age = x1, group = "WT")); c(y2$Contrast, y2$Pvalue)})
rownames(y1) = c("contrast", "pval"); t(y1)
})
age_spe
age_spe <- lapply(c("2m", "4m", "5m", "6m"), function(x1) {
y1 = sapply(glm.fit[1:10], function(x2) {
y2 = contrast(x2, list(age = x1, group = "APP"), list (age = x1, group = "WT")); c(y2$Contrast, y2$Pvalue)})
rownames(y1) = c("contrast", "pval"); t(y1)
}); names(age_spe) <- c("2m", "4m", "5m", "6m")
age_spe
glm.fit[[1]]
summary(glm.fit[[1]])
C <- matrix(c(0,1,0,0,0,0,0,0), 1); summary(glht(glm.fit[[1]], linfct = C))
contrast(glm.fit[[1]], list(age ="4m", group = "WT"), list(age ="2m", group = "WT"))
?outer
x= c("2m", "4m", "5m")
outer(x, x)
?comb
combn(x)
combn(x, x)
?combn
combn(x, 2)
x = c(x, "6m)
)
""
"
x
x = c(x, "6m")
x
combn(x, 2)
combn(c("2m", "4m", "5m", "6m"), 2)
combn <- combn(c("2m", "4m", "5m", "6m"), 2)
combn
apply(combn, 2, function(x) paste0(x[2], x[1]))
apply(combn, 2, function(x) paste(x[2], x[1], sep = "_"))
combn <- combn(c("2m", "4m", "5m", "6m"), 2)
geno_spec_wt <- lapply(1:ncol(combn), function(x1) {
y1 = sapply(glm.fit[1:10], function(x2) {
y2 = contrast(x2, list(age = combn[2, x1], group = "WT"), list (age = combn[1, x1], group = "WT"))
c(y2$Contrast, y2$Pvalue)})
rownames(y1) = c("contrast", "pval"); t(y1)
}); names(geno_spec_wt) <- apply(combn, 2, function(x) paste0(x[2], x[1]))
geno_spec_wt
library(dplyr)
library(contrast)
library(multcomp)
rm(list = ls())
setwd("~/Dropbox/GitHub/Ad")
load("./data/brain2014.rdt")
source("function.R")
colnames(brain.tpm)
grep("1559", colnames(glm.dt))
grep("1559", colnames(brain.tpm))
cutoff <- quantile(c(as.matrix(glm.dt)), 0.25)  # TPM level
load("./data/brain2014.rdt"); glm.dt <- brain.tpm
cutoff <- quantile(c(as.matrix(glm.dt)), 0.25)  # TPM level
glm.dt <- glm.dt[apply(glm.dt, 1, function(x) max(x) > cutoff & sum(x > 0) > round(ncol(glm.dt) / 10)), ]
age <- factor(gsub("^.*(2m|4m|5m|6m).*", "\\1", colnames(glm.dt)), levels = c("2m", "4m", "5m", "6m"))
group <- factor(gsub("^.*(WT|APP).*", "\\1", colnames(glm.dt)), levels = c("WT", "APP"))
uid <- paste(age, group, sep = "_")
batch <- factor(gsub("^.*(2014|mouse).*", "\\1", colnames(glm.dt)), levels = c("2014", "mouse"))
conditions <- c("2m_WT", "2m_APP", "4m_WT", "4m_APP", "5m_WT", "5m_APP", "6m_WT", "6m_APP")
conditions <- conditions[conditions %in% uid]
(conditions <- conditions[conditions %in% uid])
table(uid)
(table(uid))
hist(c(as.matrix(brain.tpm)))
hist(c(as.matrix(brain.tpm)), xlab = Log2(TPM), col = "dodgerblue3")
hist(c(as.matrix(brain.tpm)), xlab = "Log2(TPM)", col = "dodgerblue3")
?hist
hist(c(as.matrix(brain.tpm)), xlab = "Log2(TPM)", col = "dodgerblue3", border = "white")
hist(c(as.matrix(brain.tpm)), main = "", xlab = "Log2(TPM)", col = "dodgerblue3", border = "white")
hist(c(as.matrix(brain.tpm)), main = NULL, xlab = "Log2(TPM)", col = "dodgerblue3", border = "white")
factor(gsub("^.*(2014|mouse).*", "\\1", colnames(glm.dt)), levels = c("2014", "mouse"))
fit0 <- apply(glm.dt, 1, function (x) summary(lm(x ~ age + group + batch + age*group)))
fit0.batch <- sapply(fit0, function (x) x$coefficients["batchmouse", "Estimate"])
glm.dt_bc <- glm.dt - as.matrix(fit0.batch) %*% (as.numeric(batch) - 1)
glm.fit <- apply(glm.dt_bc, 1, function (x) lm(x ~ age + group + age*group))
glm.fit[["App"]]
summary(glm.fit[["App"]])
fit.anova <- lapply(glm.fit, anova)  # normal aging genes, general app genes, age-dependent app genes
fit.anova[[1]]
str(fit.anova[[1]])
summary(fit.anova[[1]])
fit.anova[[1]]
fit.anova[[1]]$x
fit.anova[[1]][1, ]
fit.anova[[1]][1, "Pr(>F)"]
fit.anova[[1]]["age", "Pr(>F)"]
fit.anova[["App"]]
x = fit.anova[[1]]
genes <- lapply(c("age", "group", "age:group"), function(x1) {
y1 = sapply(fit.anova, function(x2) x2[x1, "Pr(>F)"])
})
length(genes)
genes[[1]]
genes.aov <- lapply(c("age", "group", "age:group"), function(x1) {
y1 = sapply(fit.anova, function(x2) x2[x1, "Pr(>F)"])
}); names(genes.aov) <- c("age", "app", "age:app")
names(genes.aov)
lapply(genes.aov, function(x) sum(x < 0.05))
sapply(genes.aov, function(x) sum(x < 0.05))
(sapply(genes.aov, function(x) sum(x < 0.05)))
age_spe <- lapply(c("2m", "4m", "5m", "6m"), function(x1) {
y1 = sapply(glm.fit, function(x2) {
y2 = contrast(x2, list(age = x1, group = "APP"), list (age = x1, group = "WT"))
c(y2$Contrast, y2$Pvalue)})
rownames(y1) = c("contrast", "pval"); t(y1)
}); names(age_spe) <- c("2m", "4m", "5m", "6m")
age_spe$2m
age_spe[["2m"]]
sapply(age_spe, function(x) sum(x[, 2] < 0.05))
sapply(age_spe, function(x) sum(x[, 1] > 0 & x[, 2] < 0.05))
sapply(age_spe, function(x) sum(x[, 1] < 0 & x[, 2] < 0.05))
up = sapply(age_spe, function(x) x[x[, 1] > 0 & x[, 2] < 0.05, ])
names(up)
dim(up[["2m"]])
age_spe_up <- sapply(age_spe, function(x) x[x[, 1] > 0 & x[, 2] < 0.05, ])
age_spe_dn <- sapply(age_spe, function(x) x[x[, 1] < 0 & x[, 2] < 0.05, ])
sapply(age_spe, function(x) nrow(x))
sapply(age_spe_up, function(x) nrow(x))
sapply(age_spe_dn, function(x) nrow(x))
age_spe <- lapply(c("2m", "4m", "5m", "6m"), function(x1) {
y1 = sapply(glm.fit, function(x2) {
y2 = contrast(x2, list(age = x1, group = "APP"), list (age = x1, group = "WT"))
c(y2$Contrast, y2$Pvalue)})
rownames(y1) = c("contrast", "pval"); t(y1)
})
lapply(c("2m", "4m", "5m", "6m"), function(x1) {
contrast(glm.fit[["Stat3"]], list(age = x1, group = "APP"), list (age = x1, group = "WT"))
})
sapply(c("2m", "4m", "5m", "6m"), function(x1) {
contrast(glm.fit[["Stat3"]], list(age = x1, group = "APP"), list (age = x1, group = "WT"))
})
sapply(c("2m", "4m", "5m", "6m"), function(x1) {
contrast(glm.fit[["Stat3"]], list(age = x1, group = "APP"), list (age = x1, group = "WT"))
}) %>% filter(c(1, 2))
age_spe_up <- sapply(age_spe, function(x) x[x[, 1] > 0 & x[, 2] < 0.05, ])
sapply(c("2m", "4m", "5m", "6m"), function(x1) {
contrast(glm.fit[["Stat3"]], list(age = x1, group = "APP"), list (age = x1, group = "WT"))
}) %>% filter(1:2)
sapply(c("2m", "4m", "5m", "6m"), function(x1) {
contrast(glm.fit[["Stat3"]], list(age = x1, group = "APP"), list (age = x1, group = "WT"))
})[c("Contrast", "Pvalue"), ]
age_spe_up <- sapply(age_spe, function(x) x[x[, 1] > 0 & x[, 2] < 0.05, ])
age_spe_dn <- sapply(age_spe, function(x) x[x[, 1] < 0 & x[, 2] < 0.05, ])
cat("age-specific APP genes: up"); sapply(age_spe_up, function(x) nrow(x))
cat("age-specific APP genes: up")
sapply(age_spe_up, function(x) nrow(x))
sapply(age_spe_up, function(x) nrow(x))
names(age_spe)
names(age_spe) <- c("2m", "4m", "5m", "6m")
age_spe_up <- sapply(age_spe, function(x) x[x[, 1] > 0 & x[, 2] < 0.05, ])
age_spe_dn <- sapply(age_spe, function(x) x[x[, 1] < 0 & x[, 2] < 0.05, ])
cat("age-specific APP genes: down"); sapply(age_spe_dn, function(x) nrow(x))
cat("age-specific APP genes: up \n"); sapply(age_spe_up, function(x) nrow(x))
cat("age-specific APP genes: down \n"); sapply(age_spe_dn, function(x) nrow(x))
sapply(genes.aov, function(x) sum(x < 0.05))
?draw.pairwise.venn
library(VennDiagram)
?draw.pairwise.venn
head(genes.aov)
genes.aov <- lapply(genes.aov, function(x) x[< 0.05])
genes.aov <- lapply(genes.aov, function(x) x[x < 0.05])
dim(genes.aov)
length(genes.aov)
names(genes.aov)
genes.aov <- lapply(genes.aov, function(x) nrow(x))
genes.aov <- lapply(c("age", "group", "age:group"), function(x1) {
y1 = sapply(fit.anova, function(x2) x2[x1, "Pr(>F)"])
}); names(genes.aov) <- c("age", "app", "age:app")
genes.aov[[1]]
genes.aov <- lapply(c("age", "group", "age:group"), function(x1) {
sapply(fit.anova, function(x2) x2[x1, "Pr(>F)"]) %>% lapply(function(x) x[x < 0.05])
}); names(genes.aov) <- c("age", "app", "age:app")
lapply(genes.aov, function(x) nrow(x))
head(fit.anova)
x1 = "age"
sapply(fit.anova, function(x2) x2[x1, "Pr(>F)"]) %>% lapply(function(x3) x3[x3 < 0.05])
genes.aov <- lapply(c("age", "group", "age:group"), function(x1) {
sapply(fit.anova, function(x2) x2[x1, "Pr(>F)"]) %>% lapply(function(x3) x3[x3 < 0.05])
}); names(genes.aov) <- c("age", "app", "age:app")
names(genes.aov)
head(genes.aov[[1]])
x = genes.aov[[1]]
head(x)
fit.aov[["0610010F05Rik"]]
fit.anova[["0610010F05Rik"]]
genes.aov <- lapply(c("age", "group", "age:group"), function(x1) {
lapply(fit.anova, function(x2) x2[x1, "Pr(>F)"]) %>% lapply(function(x3) x3[x3 < 0.05])
})
genes.aov[[1]]
genes.aov <- lapply(c("age", "group", "age:group"), function(x1) {
y1 = lapply(fit.anova, function(x2) x2[x1, "Pr(>F)"])
y1 = lapply(y1, function(x3) x3[x3 < 0.05])
}); names(genes.aov) <- c("age", "app", "age:app")
head(genes.aov[[1]])
lapply(genes.aov, function(x) length(x))
genes.aov <- lapply(c("age", "group", "age:group"), function(x1) {
y1 = lapply(fit.anova, function(x2) x2[x1, "Pr(>F)"])
lapply(y1, function(x3) x3[x3 < 0.05])
}); names(genes.aov) <- c("age", "app", "age:app")
lapply(genes.aov, function(x) length(x))
genes.aov <- lapply(c("age", "group", "age:group"), function(x1) {
y1 = sapply(fit.anova, function(x2) x2[x1, "Pr(>F)"])
lapply(y1, function(x3) x3[x3 < 0.05])
}); names(genes.aov) <- c("age", "app", "age:app")
lapply(genes.aov, function(x) length(x))
x1
y1 = sapply(fit.anova, function(x2) x2[x1, "Pr(>F)"])
head(y1)
lapply(y1, function(x3) x3[x3 < 0.05])
y1[y1 < 0.05]
genes.aov <- lapply(c("age", "group", "age:group"), function(x1) {
y1 = sapply(fit.anova, function(x2) x2[x1, "Pr(>F)"]); y1[y1 < 0.05]
}); names(genes.aov) <- c("age", "app", "age:app")
lapply(genes.aov, function(x) length(x))
names(genes.aov[[1]])
?venn.diagram
venn( list(A=1:5,B=4:6,C=c(4,8:10)) )
library(gplots)
venn( list(A=1:5,B=4:6,C=c(4,8:10)) )
venn(list(age = names(genes.aov[[1]]), APP = names(genes.aov[[2]]), age:app = names(genes.aov[[3]]))
venn(list(age = names(genes.aov[[1]]), APP = names(genes.aov[[2]]), age_int_app = names(genes.aov[[3]]))
)
length(age_spe_up)
head(age_spe_up)
rownames(age_spe_up[[1]])
cat("age-specific APP genes: up \n"); sapply(age_spe_up, function(x) nrow(x))
myGK(rownames(age_spe_up[[1]]))
myGK <- function (geneId) {
entrezId <- mget(geneId, org.Mm.egSYMBOL2EG, ifnotfound = NA) %>% unlist %>% na.omit %>% as.character
if(! length(entrezId) > 1) return(NA) # use nsFilter() for additional filtering if required
uni_go <- get("org.Mm.egGO") %>% Lkeys
uni_kg <- get("org.Mm.egPATH") %>% Lkeys
GO <- lapply(c("BP", "MF", "CC"), function(category) {
over <- new("GOHyperGParams", geneIds = entrezId, universeGeneIds = uni_go, annotation = "org.Mm.eg.db",
ontology = category, pvalueCutoff = 0.001, testDirection = "over") %>% hyperGTest
glist <- sapply(geneIdsByCategory(over), function(x) {y <- mget(x, envir=org.Mm.egSYMBOL); paste(y, collapse=";")})
go <- summary(over); go$Symbols <- glist[as.character(go[, paste0("GO", category, "ID")])]; go
}); names(GO) <- c("BP", "MF", "CC")
over <- new("KEGGHyperGParams", geneIds=entrezId, universeGeneIds=uni_kg, annotation="org.Mm.eg.db",
categoryName="KEGG", pvalueCutoff=0.01, testDirection="over") %>% hyperGTest
glist <- sapply(geneIdsByCategory(over), function(x) {y <- mget(x, envir=org.Mm.egSYMBOL); paste(y, collapse=";")})
kegg <- summary(over); kegg$Symbols <- glist[as.character(kegg$KEGGID)]
gk <- list(); gk$GO <- GO; gk$KEGG <- kegg; return(gk)
}
myGK(rownames(age_spe_up[[1]]))
sapply(c("2m", "4m", "5m", "6m"), function(x1) {
contrast(glm.fit[["Stat3"]], list(age = x1, group = "APP"), list (age = x1, group = "WT"))
})[c("Contrast", "Pvalue"), ]
2^0.1
age_spe_up <- sapply(age_spe, function(x) x[x[, 1] > 0.1 & x[, 2] < 0.05, ])
age_spe_dn <- sapply(age_spe, function(x) x[x[, 1] < -0.1 & x[, 2] < 0.05, ])
cat("age-specific APP genes: up \n"); sapply(age_spe_up, function(x) nrow(x))
cat("age-specific APP genes: down \n"); sapply(age_spe_dn, function(x) nrow(x))
age_spe_up_gk <- lapply(age_spe_up, function(x) myGK(rownames(x))
age_spe_dn_gk <- lapply(age_spe_dn, function(x) myGK(rownames(x))
age_spe_up_gk <- lapply(age_spe_up, function(x) myGK(rownames(x))
)
names(age_spe_up_gk)
age_spe_up_gk$GO$MF
age_spe_up_gk[["2m"]]$GO$MF
age_spe_up_gk[["2m"]]$GO$MF$Term
paste(age_spe_up_gk[["2m"]]$GO$MF$Term, collapse = ",")
paste(age_spe_up_gk[["2m"]]$GO$MF$Term, collapse = ", ")
paste(age_spe_up_gk[["2m"]]$KEGG$Term, collapse = ", ")
lapply(age_spe_up_gk, function(x) paste(x$KEGG$Term, collapse = ", "))
sapply(age_spe_up_gk, function(x) paste(x$KEGG$Term, collapse = ", "))
lapply(age_spe_up_gk, function(x) paste(x$KEGG$Term, collapse = ", "))
lapply(age_spe_up_gk, function(x) paste(x$KEGG$Term, collapse = ", ")) %>% unlist
x = sapply(age_spe_up_gk, function(x) paste(x$KEGG$Term, collapse = ", "))
class(x)
length(x)
x["2m"]
dim(glm.dt)
cat("data: ", dim(glm.dt))
cat("data:", dim(glm.dt))
summary(glm.fit[["App"]])$coefficient
fit.r2 <- sapply(glm.fit, function (x) summary(x)$r.squared)
fit.qval <- sapply(glm.fit, function (x) summary(x)$fstatistic) %>%
apply(2, function (x) pf(x[1], x[2], x[3], lower.tail = F)) %>% p.adjust(method = "fdr")
fit.qr <- glm.fit[fit.qval < 0.05 & fit.r2 > 0.4]
fit.qr <- glm.fit[fit.qval < 0.05 & fit.r2 > 0.3]
(glm.fit <- glm.fit[fit.qval < 0.05 & fit.r2 > 0.4])
glm.fit <- glm.fit[fit.qval < 0.05 & fit.r2 > 0.4]
dim(glm)
dim(glm.fit)
length(glm.fit)
cat("Genes:"); length(glm.fit)
cat("App \n"); summary(glm.fit[["App"]])$coefficient
summary(glm.fit[["App"]])$coefficient
glm.fit[["App"]]
names(glm.fit)
glm.fit <- apply(glm.dt_bc, 1, function (x) lm(x ~ age + group + age*group))
cat("App \n"); summary(glm.fit[["App"]])$coefficient
fit.r2 <- sapply(glm.fit, function (x) summary(x)$r.squared)
head(fit.r2)
fit.qval <- sapply(glm.fit, function (x) summary(x)$fstatistic) %>%
apply(2, function (x) pf(x[1], x[2], x[3], lower.tail = F)) %>% p.adjust(method = "fdr")
head(fit.qval)
glm.fit1 <- glm.fit[fit.qval < 0.05 & fit.r2 > 0.4]
names(glm.fit1)
glm.fit1[["App"]]
glm.fit1[["Stat3"]]
fit.r2[["Stat3"]]
fit.r2["Stat3"]
fit.qval["Stat3"]
glm.fit1 <- glm.fit[fit.qval < 0.05 & fit.r2 > 0.3]
glm.fit1[["Stat3"]]
glm.fit <- glm.fit[fit.qval < 0.05 & fit.r2 > 0.3]
cat("Genes:"); length(glm.fit)
cat("App \n"); summary(glm.fit[["App"]])$coefficient
cat("Genes:")
length(glm.fit)
fit.anova <- lapply(glm.fit, anova)  # normal aging genes, general app genes, age-dependent app genes
fit.anova[["App"]]
fit.anova <- lapply(glm.fit, anova)  # normal aging genes, general app genes, age-dependent app genes
fit.anova[["App"]]
fit.anova[["Stat3"]]
fit.anova[["App"]]
genes.aov <- lapply(c("age", "group", "age:group"), function(x1) {
y1 = sapply(fit.anova, function(x2) x2[x1, "Pr(>F)"]); y1[y1 < 0.05]
}); names(genes.aov) <- c("age", "app", "age:app")
lapply(genes.aov, function(x) length(x))
venn(list(age = names(genes.aov[[1]]), APP = names(genes.aov[[2]]), age_int_app = names(genes.aov[[3]])))
sapply(genes.aov, function(x) length(x))
glm.fit[["App"]]
summary(glm.fit[["App"]])
age_spe <- lapply(c("2m", "4m", "5m", "6m"), function(x1) {
y1 = sapply(glm.fit, function(x2) {
y2 = contrast(x2, list(age = x1, group = "APP"), list(age = x1, group = "WT"))
c(y2$Contrast, y2$Pvalue)
}); rownames(y1) = c("contrast", "pval"); t(y1)
}); names(age_spe) <- c("2m", "4m", "5m", "6m")
cat("Stat3 \n")
sapply(c("2m", "4m", "5m", "6m"), function(x1) {
contrast(glm.fit[["Stat3"]], list(age = x1, group = "APP"), list (age = x1, group = "WT"))
})[c("Contrast", "Pvalue"), ]
age_spe_up <- sapply(age_spe, function(x) x[x[, 1] > 0.1 & x[, 2] < 0.05, ])
age_spe_dn <- sapply(age_spe, function(x) x[x[, 1] < -0.1 & x[, 2] < 0.05, ])
cat("age-specific APP genes: up \n"); sapply(age_spe_up, function(x) nrow(x))
cat("age-specific APP genes: down \n"); sapply(age_spe_dn, function(x) nrow(x))
cat("age-specific APP genes: up (contrast > 0.1, pvalue < 0.05) \n"); sapply(age_spe_up, function(x) nrow(x))
cat("age-specific APP genes: down (contrast > 0.1, pvalue < 0.05) \n"); sapply(age_spe_dn, function(x) nrow(x))
age_spe_up_gk <- lapply(age_spe_up, function(x) myGK(rownames(x)))
sapply(c("2m", "4m", "5m", "6m"), function(x1) {
contrast(glm.fit[["Stat3"]], list(age = x1, group = "APP"), list (age = x1, group = "WT"))
})[c("Contrast", "Pvalue"), ]
age_spe_up <- sapply(age_spe, function(x) x[x[, 1] > 0.1 & x[, 2] < 0.05, ])
age_spe_dn <- sapply(age_spe, function(x) x[x[, 1] < -0.1 & x[, 2] < 0.05, ])
cat("age-specific APP genes: up (contrast > 0.1, pvalue < 0.05) \n"); sapply(age_spe_up, function(x) nrow(x))
cat("age-specific APP genes: down (contrast < -0.1, pvalue < 0.05) \n"); sapply(age_spe_dn, function(x) nrow(x))
paste0("a", "b", "c")
C <- matrix(c(0,0,0,0,0,-1,1,0), 1)
cat("5m APP vs 4m APP \n"); summary(glht(glm.fit[["Stat3"]], linfct = C))
C <- matrix(c(0,0,0,0,0,0,-1,1), 1)
cat("6m APP vs 5m APP \n"); summary(glht(glm.fit[["Stat3"]], linfct = C))
rm(list = ls()); setwd("~/Dropbox/GitHub/Cortex")
load("data.rdt")
level2avg <- data$level2avg
barplot(level2avg["Ryr2", ], las = 2)
level2avg["Ryr2", ]
allen <- read.xlsx(file = "../Adsp/GWAS/table_new.xlsx", sheetName = "ALLEN")
barplot(level2avg["Apoe", ], las = 2)
level2avg <- data$level2avg %>% as.matrix
barplot(level2avg["Ryr2", ], las = 2)
barplot(level2avg["App", ], las = 2)
barplot(level2avg["Stat3", ], las = 2)
names(data)
mRNA <- data$mRNA[-c(1:10), -c(1:2)] %>% apply(2, as.numeric) %>% as.data.frame
summary(mRNA)
summary(mRNA["App", ])
mRNA[1:10, 1:10]
rownames(mRNA) <- rownames(level2avg)
summary(mRNA["App", ])
mRNA["App", ]
summary(as.matrix(mRNA["App", ]))
summary(c(mRNA["App", ]))
summary(c(as.matrix(mRNA["App", ])))
summary(c(as.matrix(mRNA["Stat3", ])))
mRNA[1:10, 1:10]
barplot(level2avg["App", ], las = 2, main = "App")
getwd()
save(level2avg, file = "../Ad/data/scl2.rdt")
