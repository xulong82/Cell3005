legend.title = element_blank(), legend.key = element_blank())
dev.off()
pdf("~/Dropbox/ADSP/kinship/kin-autosome2.pdf")
ggplot(kin.dt[kin.dt$chr == "autosome", ], aes(kinship, fill = pedigree)) + geom_density(alpha = .5) +
theme_bw() + xlab("") + ylab("Density") +
theme(panel.border = element_blank(),
axis.line = element_line(color = 'grey30'),
axis.text = element_text(size = 12),
legend.text = element_text(size = 12),
legend.title = element_blank(), legend.key = element_blank())
dev.off()
pdf("~/Dropbox/ADSP/kinship/kin-autosome.pdf")
ggplot(kin.dt[kin.dt$chr == "autosome", ], aes(kinship)) + geom_density(fill = pedigree, alpha = .5) +
theme_bw() + xlab("") + ylab("Density") +
theme(panel.border = element_blank(),
axis.line = element_line(color = 'grey30'),
axis.text = element_text(size = 12),
legend.text = element_text(size = 12),
legend.title = element_blank(), legend.key = element_blank())
dev.off()
pdf("~/Dropbox/ADSP/kinship/kin-autosome.pdf")
ggplot(kin.dt[kin.dt$chr == "autosome", ], aes(kinship)) + geom_density(aes(fill = pedigree), alpha = .5) +
theme_bw() + xlab("") + ylab("Density") +
theme(panel.border = element_blank(),
axis.line = element_line(color = 'grey30'),
axis.text = element_text(size = 12),
legend.text = element_text(size = 12),
legend.title = element_blank(), legend.key = element_blank())
dev.off()
pdf("~/Dropbox/ADSP/kinship/kin-autosome.pdf")
ggplot(kin.dt[kin.dt$chr == "autosome", ], aes(kinship)) +
geom_density(aes(fill = pedigree), alpha = .5) +
scale_fill_manual(values = c("grey30", "firebrick1")) +
theme_bw() + xlab("") + ylab("Density") +
theme(panel.border = element_blank(),
axis.line = element_line(color = 'grey30'),
axis.text = element_text(size = 12),
axis.title = element_text(size = 12, vjust = 1),
legend.text = element_text(size = 12),
legend.title = element_blank(), legend.key = element_blank())
dev.off()
pdf("~/Dropbox/ADSP/kinship/kin-autosome.pdf")
ggplot(kin.dt[kin.dt$chr == "autosome", ], aes(kinship)) +
geom_density(aes(fill = pedigree), alpha = .5) +
scale_fill_manual(values = c("dodgerblue3", "firebrick1")) +
theme_bw() + xlab("") + ylab("Density") +
theme(panel.border = element_blank(),
axis.line = element_line(color = 'grey30'),
axis.text = element_text(size = 12),
axis.title = element_text(size = 12, vjust = 1),
legend.text = element_text(size = 12),
legend.title = element_blank(), legend.key = element_blank())
dev.off()
pdf("~/Dropbox/ADSP/kinship/kin-autosome.pdf")
ggplot(kin.dt[kin.dt$chr == "autosome", ], aes(kinship)) +
geom_density(aes(fill = pedigree), alpha = .5) +
scale_fill_manual(values = c("dodgerblue3", "firebrick1")) +
theme_bw() + xlab("") + ylab("Density") +
theme(panel.border = element_blank(),
axis.line = element_line(color = 'grey30'),
axis.text = element_text(size = 12),
axis.title = element_text(size = 12, vjust = 1),
legend.text = element_text(size = 12))
#       legend.title = element_blank(), legend.key = element_blank())
dev.off()
pdf("~/Dropbox/ADSP/kinship/kin-autosome.pdf")
ggplot(kin.dt[kin.dt$chr == "autosome", ], aes(kinship)) +
geom_density(aes(color = pedigree), alpha = .5) +
scale_fill_manual(values = c("dodgerblue3", "firebrick1")) +
theme_bw() + xlab("") + ylab("Density") +
theme(panel.border = element_blank(),
axis.line = element_line(color = 'grey30'),
axis.text = element_text(size = 12),
axis.title = element_text(size = 12, vjust = 1),
legend.text = element_text(size = 12),
legend.title = element_blank(), legend.key = element_blank())
dev.off()
pdf("~/Dropbox/ADSP/kinship/kin-autosome.pdf")
ggplot(kin.dt[kin.dt$chr == "autosome", ], aes(kinship)) +
geom_density(aes(fill = pedigree), alpha = .5) +
scale_fill_manual(values = c("dodgerblue3", "firebrick1")) +
theme_bw() + xlab("") + ylab("Density") +
theme(panel.border = element_blank(),
axis.line = element_line(color = 'grey30'),
axis.text = element_text(size = 12),
axis.title = element_text(size = 12, vjust = 1),
legend.text = element_text(size = 12),
legend.title = element_blank())
dev.off()
library(WGCNA)
install.packages("WGCNA")
library(WGCNA)
install.packages("namespace")
library(WGCNA)
install.packages("impute")
library(WGCNA)
install.packages(c("matrixStats", "Hmisc", "splines", "foreach", "doParallel", "reshape", "fastcluster", "dynamicTreeCut", "survival")
source("http://bioconductor.org/biocLite.R")
biocLite(c("GO.db", "preprocessCore", "impute"))
library("Biobase", lib.loc="~/Library/R/3.1/library")
install.packages(c("matrixStats", "Hmisc", "splines", "foreach", "doParallel", "reshape", "fastcluster", "dynamicTreeCut", "survival")
source("http://bioconductor.org/biocLite.R")
biocLite(c("GO.db", "preprocessCore", "impute"))
source("http://bioconductor.org/biocLite.R")
biocLite(c("GO.db", "preprocessCore", "impute"))
install.packages(c("matrixStats", "Hmisc", "splines", "foreach", "doParallel", "reshape", "fastcluster", "dynamicTreeCut", "survival")
)
install.packages(c("matrixStats", "Hmisc", "splines", "foreach",
title: "myfile"
?seq
132 + 95 + 276 + 113
shiny::runApp('Dropbox/GitHub/SCR/shiny')
shiny::runApp('Dropbox/GitHub/SCR/shiny')
log10(0.05)
shiny::runApp('Dropbox/GitHub/SCR/shiny')
shiny::runApp('Dropbox/GitHub/SCR/shiny')
shiny::runApp('Dropbox/GitHub/SCR/shiny')
shiny::runApp('Dropbox/GitHub/SCR/shiny')
shiny::runApp('Dropbox/GitHub/SCR/shiny')
shiny::runApp('Dropbox/GitHub/SCR/shiny')
shiny::runApp('Dropbox/GitHub/SCR/shiny')
shiny::runApp('Dropbox/GitHub/SCR/shiny')
library(DESeq2)
library(affy)
library(oligo)
library(limma)
library(DESeq2)
library(pheatmap)
library(VennDiagram)
library(gplots)
library(dplyr)
library(xlsx)
rm(list = ls())
setwd("~/Dropbox/GitHub/Lupus")
yaa <- list()
eset <- read.delim("Yaa/BXSB/counts.txt", stringsAsFactors = F)
eset <- data.frame(row.names = eset$Gene, eset[grep("BXSB", colnames(eset))])
dim(eset)
head(eset)
eset <- eset[apply(eset, 1, function(x) max(x) > 10 & sum(x > 0) > 2), ]
head(eset)
dim(eset)
group <- factor(gsub(".*(B6|Yaa).*", "\\1", colnames(eset)), levels = c("B6", "Yaa"))
group
colData <- data.frame(row.names = colnames(eset), condition = group)
dds <- DESeqDataSetFromMatrix(countData = eset, colData = colData, design = ~ condition)
dds <- DESeq(dds)
(res <- results(dds))
summary(res)
plotMA(res, main = "DESeq2", ylim = c(-2,2))
(res <- results(dds))
plotMA(res, main = "DESeq2", ylim = c(-2,2))
resSig <- subset(res, padj < 0.1) %>% as.data.frame
resSig <- subset(res, pvalue < 0.05) %>% as.data.frame
hist(res@listData$padj)
resSig <- subset(res, padj < 0.05) %>% as.data.frame
resSig <- subset(res, padj < 0.1) %>% as.data.frame
head(resSig)
resSig <- subset(res, pvalue < 0.05) %>% as.data.frame
resSig <- subset(res, padj < 0.1) %>% as.data.frame
resSig <- subset(res, padj < 0.05) %>% as.data.frame
resSig <- subset(res, padj < 0.05) %>% as.data.frame
resSig <- subset(res, pvalue < 0.05) %>% as.data.frame
head(res)
yaa$bxsb <- resSig
head(resSig)
yaa$bxsb$up <- rownames(resSig)[resSig$log2FoldChange > 0]
head(resSig)
x = rownames(resSig)
y = resSig$log2FoldChange
rownames(resSig)[resSig$log2FoldChange > 0]
yaa <- list()
yaa$bxsb$sig <- resSig
yaa$bxsb$up <- rownames(resSig)[resSig$log2FoldChange > 0]
yaa$bxsb$dn <- rownames(resSig)[resSig$log2FoldChange < 0]
summary(res)
yaa <- list()
yaa$bxsb$sig <- resSig
yaa$bxsb$up <- rownames(resSig)[resSig$log2FoldChange > 0]
yaa$bxsb$down <- rownames(resSig)[resSig$log2FoldChange < 0]
yaa$bxsb$up
yaa$bxsb$down
yaa$bxsb$up
yaa$bxsb$down
cel.files <- read.celfiles(list.celfiles("./Yaa/B6/CEL", full.name = T))
norm.rma <- rma(cel.files, target = "core")  # RMA, gene level summarization
show(norm.rma)
eset <- exprs(norm.rma)
colnames(eset) <- gsub("GC_Gene1-0ST_(.*)_430.*", "\\1", colnames(eset))
head(eset)
sampleInf <- read.xlsx("Yaa/B6/Sample.xlsx", sheetName = "Sheet1", stringsAsFactors = F)
sampleInf <- sampleInf[match(colnames(eset), sampleInf$Sample.Name), ]
sampleInf$Genotype[grep("wild type", sampleInf$Genotype)] <- "WT"
sampleInf$Genotype[grep("other", sampleInf$Genotype)] <- "MT"
mogene <- read.delim("./Yaa/mogene2symbol.map", sep = "\t", stringsAsFactors = F)
eset <- eset[rownames(eset) %in% mogene[, 1], ]
symbol <- mogene$Associated.Gene.Name[match(rownames(eset), mogene$Affy.MoGene.probeset)]
eset <- apply(eset, 2, function(x) tapply(x, symbol, sum))
eset <- eset[apply(eset, 1, function(x) min(x) > log2(120)), ]
dim(eset)
fit <- apply(eset, 1, function(x) lm(x ~ sampleInf$Genotype))
fit.r2 <- sapply(fit, function (x) summary(x)$r.squared)
fit.fs <- sapply(fit, function (x) summary(x)$fstatistic)
fit.et <- sapply(fit, function (x) summary(x)$coefficients[2, 1])
fit.pv <- apply(fit.fs, 2, function (x) pf(x[1], x[2], x[3], lower.tail = F))
fit.qv <- p.adjust(fit.pv, method = "fdr")
fit.sig <- fit[fit.qv < 0.05]
fit.sig <- fit[fit.pv < 0.05]
names(fit.sig)
yaa$b6$sig <- fit.sig <- fit[fit.pv < 0.05]
names(fit)
yaa$b6$up <- up <- names(fit)[fit.pv < 0.05 & fit.et > 0]
yaa$b6$down <- dn <- names(fit)[fit.pv < 0.05 & fit.et < 0]
yaa$b6$down
save(yaa, file = "data/yaaList.rdt")
load("data/profile12.rdt")
lapply(profile1, length)
lapply(profile2, length)
library(ggplot2)
rm(list = ls())
setwd("~/Dropbox/GitHub/Lupus")
load("./data/myTpm.rdt")
derry <- read.delim("./data/derry.txt", stringsAsFactors = F, header = F)
geneId <- gsub(" ", "", derry$V1)
geneId <- gsub("\\(GITR\\)", "", geneId)
chosen <- myTpm[geneId, ]
group <- gsub("[12]", "", colnames(chosen))
pval <- apply(chosen, 1, function (x) min(summary(aov(x ~ group))[[1]][["Pr(>F)"]], na.rm = T))
table <- cbind(geneId, chosen, ANOVA = pval[geneId])
table$"FC(NP/NN)" <- rowMeans(table[, c("NP1", "NP2")]) / rowMeans(table[, c("NN1", "NN2")])
table$"FC(PP/NN)" <- rowMeans(table[, c("PP1", "PP2")]) / rowMeans(table[, c("NN1", "NN2")])
rownames(table) <- NULL
head(table)
geneId.tfh <- geneId[1:34]
gdt <- myTpm[geneId.tfh, ]
geneId.thc <- geneId[35:61]
head(gdt)
head(table)
ggplot() +
geom_line(data = gdt, aes(x = gene, y = value), color = "grey80", size = 2) +
geom_point(data = gdt, aes(x = gene, y = value, color = sample), size = 3) +
theme_bw() + xlab("") + ylab("") + # coord_flip() +
scale_color_manual(values = c("darkorchid2", "chartreuse3", "dodgerblue3"),
breaks = c("NN", "NP", "PP"),
labels = c("N", "ACT", "ACT IL21")) +
theme(panel.border = element_blank(),
axis.line = element_line(color = "grey30"),
#       axis.text.x = element_text(size = 10, face = 2, vjust = 0.5),
axis.text.x = element_text(size = 10, face = 2, angle = 90, vjust = 0.5),
axis.text.y = element_text(size = 10, face = 2),
legend.position = "none")
gdt <- data.frame("NN" = rowMeans(gdt[1:2]), "NP" = rowMeans(gdt[3:4]), "PP" = rowMeans(gdt[5:6]))
gdt <- log2(gdt + 1)
gdt <- data.frame(value = c(as.matrix(gdt)),
gene = factor(rep(rownames(gdt), time = ncol(gdt)), levels = rownames(gdt)),
sample = factor(rep(colnames(gdt), each = nrow(gdt)), levels = colnames(gdt)))
ggplot() +
geom_line(data = gdt, aes(x = gene, y = value), color = "grey80", size = 2) +
geom_point(data = gdt, aes(x = gene, y = value, color = sample), size = 3) +
theme_bw() + xlab("") + ylab("") + # coord_flip() +
scale_color_manual(values = c("darkorchid2", "chartreuse3", "dodgerblue3"),
breaks = c("NN", "NP", "PP"),
labels = c("N", "ACT", "ACT IL21")) +
theme(panel.border = element_blank(),
axis.line = element_line(color = "grey30"),
#       axis.text.x = element_text(size = 10, face = 2, vjust = 0.5),
axis.text.x = element_text(size = 10, face = 2, angle = 90, vjust = 0.5),
axis.text.y = element_text(size = 10, face = 2),
legend.position = "none")
dim(table)
dim(myTpm)
head(table)
chosen
group <- gsub("[12]", "", colnames(chosen))
table$"FC(NP/NN)" <- rowMeans(table[, c("NP1", "NP2")] + 1) / rowMeans(table[, c("NN1", "NN2")] + 1)
table$"FC(PP/NN)" <- rowMeans(table[, c("PP1", "PP2")] + 1) / rowMeans(table[, c("NN1", "NN2")] + 1)
table
summary(table[, 10])
geneId.tfh <- geneId[1:34]
chosen <- myTpm[geneId, ]
group <- gsub("[12]", "", colnames(chosen))
pval <- apply(chosen, 1, function (x) min(summary(aov(x ~ group))[[1]][["Pr(>F)"]], na.rm = T))
table <- cbind(geneId, chosen, ANOVA = pval[geneId])
head(table)
table$NN <- rowMeans(table[, c("NN1", "NN2")] + 1)
table$NP <- rowMeans(table[, c("NP1", "NP2")] + 1)
table$PP <- rowMeans(table[, c("PP1", "PP2")] + 1)
table$"FC(NP/NN)" <- table$NP / table$NN
table$"FC(PP/NN)" <- table$PP / table$NN
head(table)
geneId.tfh <- geneId[1:34]
gdt <- table[geneId.tfh, ]
gdt
ggplot() +
geom_point(data = gdt, aes(x = geneId, y = FC(NP/NN), size = NP), color = "charteruse3")
ggplot() +
geom_point(data = gdt, aes(x = geneId, y = "FC(NP/NN)", size = NP), color = "charteruse3")
ggplot() +
geom_point(data = gdt, aes(x = geneId, y = "FC(NP/NN)", size = NP), color = "chartreuse3")
table <- cbind(geneId, chosen, ANOVA = pval[geneId])
table$NN <- rowMeans(table[, c("NN1", "NN2")] + 1)
table$NP <- rowMeans(table[, c("NP1", "NP2")] + 1)
table$PP <- rowMeans(table[, c("PP1", "PP2")] + 1)
table$"FCNP" <- table$NP / table$NN
table$"FCPP" <- table$PP / table$NN
geneId.tfh <- geneId[1:34]
gdt <- table[geneId.tfh, ]
gdt
ggplot() +
geom_point(data = gdt, aes(x = geneId, y = "FCNP", size = NP), color = "chartreuse3")
ggplot() +
geom_point(data = gdt, aes(x = geneId, y = FCNP, size = NP), color = "chartreuse3")
ggplot() +
geom_point(data = gdt, aes(x = geneId, y = FCNP, size = NP), color = "chartreuse3") +
geom_point(data = gdt, aes(x = geneId, y = FCPP, size = PP), color = "dodgerblue3")
ggplot() +
geom_point(data = gdt, aes(x = geneId, y = log2(FCNP), size = NP), color = "chartreuse3") +
geom_point(data = gdt, aes(x = geneId, y = log2(FCPP), size = PP), color = "dodgerblue3")
pdf("./Figure/TFH.pdf", width = 8, height = 5)
# pdf("./Figure/THC.pdf", width = 5, height = 7)
ggplot() +
geom_point(data = gdt, aes(x = geneId, y = log2(FCNP), size = NP), color = "chartreuse3") +
geom_point(data = gdt, aes(x = geneId, y = log2(FCPP), size = PP), color = "dodgerblue3")
theme_bw() + xlab("") + ylab("") + # coord_flip() +
scale_color_manual(values = c("darkorchid2", "chartreuse3", "dodgerblue3"),
breaks = c("NN", "NP", "PP"),
labels = c("N", "ACT", "ACT IL21")) +
theme(panel.border = element_blank(),
axis.line = element_line(color = "grey30"),
#       axis.text.x = element_text(size = 10, face = 2, vjust = 0.5),
axis.text.x = element_text(size = 10, face = 2, angle = 90, vjust = 0.5),
axis.text.y = element_text(size = 10, face = 2),
legend.position = "none")
dev.off()
pdf("./Figure/TFH.pdf", width = 8, height = 5)
# pdf("./Figure/THC.pdf", width = 5, height = 7)
ggplot() +
geom_point(data = gdt, aes(x = geneId, y = log2(FCNP), size = NP), color = "chartreuse3") +
geom_point(data = gdt, aes(x = geneId, y = log2(FCPP), size = PP), color = "dodgerblue3") +
theme_bw() + xlab("") + ylab("") + # coord_flip() +
scale_color_manual(values = c("darkorchid2", "chartreuse3", "dodgerblue3"),
breaks = c("NN", "NP", "PP"),
labels = c("N", "ACT", "ACT IL21")) +
theme(panel.border = element_blank(),
axis.line = element_line(color = "grey30"),
#       axis.text.x = element_text(size = 10, face = 2, vjust = 0.5),
axis.text.x = element_text(size = 10, face = 2, angle = 90, vjust = 0.5),
axis.text.y = element_text(size = 10, face = 2),
legend.position = "none")
dev.off()
pdf("./Figure/TFH.pdf", width = 10, height = 5)
# pdf("./Figure/THC.pdf", width = 5, height = 7)
ggplot() +
geom_point(data = gdt, aes(x = geneId, y = log2(FCNP), size = NP), color = "chartreuse3") +
geom_point(data = gdt, aes(x = geneId, y = log2(FCPP), size = PP), color = "dodgerblue3") +
theme_bw() + xlab("") + ylab("") + # coord_flip() +
scale_color_manual(values = c("darkorchid2", "chartreuse3", "dodgerblue3"),
breaks = c("NN", "NP", "PP"),
labels = c("N", "ACT", "ACT IL21")) +
theme(panel.border = element_blank(),
axis.line = element_line(color = "grey30"),
#       axis.text.x = element_text(size = 10, face = 2, vjust = 0.5),
axis.text.x = element_text(size = 10, face = 2, angle = 90, vjust = 0.5),
axis.text.y = element_text(size = 10, face = 2),
legend.position = "none")
dev.off()
pdf("./Figure/TFH.pdf", width = 10, height = 5)
# pdf("./Figure/THC.pdf", width = 5, height = 7)
ggplot() +
geom_point(data = gdt, aes(x = geneId, y = log2(FCNP), size = NP), color = "chartreuse3") +
geom_point(data = gdt, aes(x = geneId, y = log2(FCPP), size = PP), color = "dodgerblue3") +
theme_bw() + xlab("") + ylab("Log2 fold change") + # coord_flip() +
scale_color_manual(values = c("darkorchid2", "chartreuse3", "dodgerblue3"),
breaks = c("NN", "NP", "PP"),
labels = c("N", "ACT", "ACT IL21")) +
theme(panel.border = element_blank(),
axis.line = element_line(color = "grey30"),
#       axis.text.x = element_text(size = 10, face = 2, vjust = 0.5),
axis.text.x = element_text(size = 10, face = 2, angle = 90, vjust = 0.5),
axis.text.y = element_text(size = 10, face = 2),
legend.position = "none")
dev.off()
pdf("./Figure/TFH.pdf", width = 10, height = 5)
# pdf("./Figure/THC.pdf", width = 5, height = 7)
ggplot() +
geom_point(data = gdt, aes(x = geneId, y = log2(FCNP), size = NP), color = "chartreuse3") +
geom_point(data = gdt, aes(x = geneId, y = log2(FCPP), size = PP), color = "dodgerblue3") +
theme_bw() + xlab("") + ylab("Log2 fold change") + # coord_flip() +
theme(panel.border = element_blank(),
axis.line = element_line(color = "grey30"),
#       axis.text.x = element_text(size = 10, face = 2, vjust = 0.5),
axis.text.x = element_text(size = 10, face = 2, angle = 90, vjust = 0.5),
axis.text.y = element_text(size = 10, face = 2),
legend.position = "none")
dev.off()
pdf("./Figure/TFH.pdf", width = 10, height = 5)
# pdf("./Figure/THC.pdf", width = 5, height = 7)
ggplot() +
geom_point(data = gdt, aes(x = geneId, y = log2(FCNP), size = NP), color = "chartreuse3") +
geom_point(data = gdt, aes(x = geneId, y = log2(FCPP), size = PP), color = "dodgerblue3") +
theme_bw() + xlab("") + ylab("Log2 fold change") + # coord_flip() +
theme(panel.border = element_blank(),
axis.line = element_line(color = "grey30"),
#       axis.text.x = element_text(size = 10, face = 2, vjust = 0.5),
axis.text.x = element_text(size = 10, face = 2, angle = 90, vjust = 0.5),
axis.text.y = element_text(size = 10, face = 2),
legend.text = element_text(size = 12, face = 2),
legend.position = "none")
dev.off()
pdf("./Figure/TFH.pdf", width = 10, height = 5)
# pdf("./Figure/THC.pdf", width = 5, height = 7)
ggplot() +
geom_point(data = gdt, aes(x = geneId, y = log2(FCNP), size = NP), color = "chartreuse3") +
geom_point(data = gdt, aes(x = geneId, y = log2(FCPP), size = PP), color = "dodgerblue3") +
theme_bw() + xlab("") + ylab("Log2 fold change") + # coord_flip() +
theme(panel.border = element_blank(),
axis.line = element_line(color = "grey30"),
#       axis.text.x = element_text(size = 10, face = 2, vjust = 0.5),
axis.text.x = element_text(size = 10, face = 2, angle = 90, vjust = 0.5),
axis.text.y = element_text(size = 10, face = 2),
label.text = element_text(size = 12, face = 2),
legend.position = "none")
dev.off()
pdf("./Figure/TFH.pdf", width = 10, height = 5)
# pdf("./Figure/THC.pdf", width = 5, height = 7)
ggplot() +
geom_point(data = gdt, aes(x = geneId, y = log2(FCNP), size = NP), color = "chartreuse3") +
geom_point(data = gdt, aes(x = geneId, y = log2(FCPP), size = PP), color = "dodgerblue3") +
theme_bw() + xlab("") + ylab("Log2 fold change") + # coord_flip() +
theme(panel.border = element_blank(),
axis.line = element_line(color = "grey30"),
#       axis.text.x = element_text(size = 10, face = 2, vjust = 0.5),
axis.text.x = element_text(size = 10, face = 2, angle = 90, vjust = 0.5),
axis.text.y = element_text(size = 10, face = 2),
axis.title = element_text(size = 12, face = 2),
legend.position = "none")
dev.off()
rm(list = ls())
setwd("~/Dropbox/GitHub/Lupus")
load("data/yaaList.rdt")
names(yaa)
names(yaa)$bxsb
names(yaa$bxsb)
yaa$bxsb$up
yaa$bxsb$down
length(yaa$bxsb$down)
length(yaa$bxsb$up)
sampleInf <- read.xlsx("Yaa/B6/Sample.xlsx", sheetName = "Sheet1", stringsAsFactors = F)
sampleInf <- sampleInf[match(colnames(eset), sampleInf$Sample.Name), ]
sampleInf$Genotype[grep("wild type", sampleInf$Genotype)] <- "WT"
sampleInf$Genotype[grep("other", sampleInf$Genotype)] <- "MT"
cel.files <- read.celfiles(list.celfiles("./Yaa/B6/CEL", full.name = T))
norm.rma <- rma(cel.files, target = "core")  # RMA, gene level summarization
show(norm.rma)
eset <- exprs(norm.rma)
colnames(eset) <- gsub("GC_Gene1-0ST_(.*)_430.*", "\\1", colnames(eset))
sampleInf <- read.xlsx("Yaa/B6/Sample.xlsx", sheetName = "Sheet1", stringsAsFactors = F)
sampleInf <- sampleInf[match(colnames(eset), sampleInf$Sample.Name), ]
sampleInf$Genotype[grep("wild type", sampleInf$Genotype)] <- "WT"
sampleInf$Genotype[grep("other", sampleInf$Genotype)] <- "MT"
mogene <- read.delim("./Yaa/mogene2symbol.map", sep = "\t", stringsAsFactors = F)
eset <- eset[rownames(eset) %in% mogene[, 1], ]
symbol <- mogene$Associated.Gene.Name[match(rownames(eset), mogene$Affy.MoGene.probeset)]
eset <- apply(eset, 2, function(x) tapply(x, symbol, sum))
eset <- eset[apply(eset, 1, function(x) min(x) > log2(120)), ]
fit <- apply(eset, 1, function(x) lm(x ~ sampleInf$Genotype))
fit[[1]]
length(yaa$b6$up)
length(yaa$b6$down)
for(obj in names(yaa)) assign(obj, yaa[[obj]])
venn.diagram(list(B6_up = b6$up, B6_down = b6$down, BXSB_up = bxsb$up, BXSB_down = bxsb$down),
file = "1.tiff")
length(b6$down)
venn.diagram(list(B6_up = b6$down, B6_down = b6$up, BXSB_up = bxsb$up, BXSB_down = bxsb$down),
file = "1.tiff", fill = c("firebrick1", darkorchid2", "chartreuse3", "dodgerblue3"))
venn.diagram(list(B6_up = b6$down, B6_down = b6$up, BXSB_up = bxsb$up, BXSB_down = bxsb$down),
file = "1.tiff", fill = c("firebrick1", "darkorchid2", "chartreuse3", "dodgerblue3"))
?venn.diagram
venn.diagram(list(B6_up = b6$down, B6_down = b6$up, BXSB_up = bxsb$up, BXSB_down = bxsb$down),
file = "venn.pdf", fill = c("firebrick1", "darkorchid2", "chartreuse3", "dodgerblue3"))
venn.diagram(list(B6_up = b6$down, B6_down = b6$up, BXSB_up = bxsb$up, BXSB_down = bxsb$down),
file = "Figure/venn.tiff", fill = c("firebrick1", "darkorchid2", "chartreuse3", "dodgerblue3"))
venn.diagram(list(B6_up = b6$down, B6_down = b6$up, BXSB_up = bxsb$down, BXSB_down = bxsb$up),
file = "Figure/venn.tiff", fill = c("firebrick1", "darkorchid2", "chartreuse3", "dodgerblue3"))
setdiff(bxsb$down, c(bxsb$up, b6$up, b6$down))
bxsb1 <- setdiff(bxsb$down, c(b6$up, b6$down))
bxsb2 <- setdiff(bxsb$up, c(b6$up, b6$down))
bxsb2 <- intersect(bxsb$up, c(b6$up, b6$down))
source("../X/function.R")
gk1 <- myGK(bxsb1)
library(KEGGREST)
keggFind("pathway", "STAT")  # KEGG: Jak-STAT signaling pathway
keggFind("pathway", "SLE")  # KEGG: Jak-STAT signaling pathway
keggFind("pathway", "Lupus")  # KEGG: Jak-STAT signaling pathway
keggFind("pathway", "Lupus")  # KEGG: SLE
write(keggGet("mmu05322", "kgml"), file = "mmu05010.xml")  # Cytoscape
writePNG(keggGet("mmu05010", "image"), "mmu05010.png")
library(png)
writePNG(keggGet("mmu05010", "image"), "mmu05010.png")
writePNG(keggGet("hsa05010", "image"), "hsa05010.png")
writePNG(keggGet("mmu05322", "image"), "mmu05010.png")
writePNG(keggGet("hsa05322", "image"), "hsa05010.png")
source("../SCR/kegg.R")
gk1 <- kegg(bxsb1)
gk2 <- kegg(bxsb2)
gk1
gk2
gk1$Term
gk2$Term
gk2$Term
gdt
intersect(b6$down, bxsb$down)
